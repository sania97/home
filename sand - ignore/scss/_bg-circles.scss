@import '_colors';
@import '_layout';

/* CIRCLES */
@keyframes circ-anim {
  10% {
    transform: rotate(0deg);
    animation-timing-function: ease-in;
  }

  20% {
    transform: rotate(90deg);
    animation-timing-function: ease-out;
  }

  40% {
    transform: rotate(360deg);
    animation-timing-function: ease-in;
  }

  100% {
    transform: rotate(360deg);
    animation-timing-function: ease-in;
  }
}

@keyframes circ-anim2 {
  25% {
    transform: rotate(0deg);
    animation-timing-function: ease-in;
  }

  35% {
    transform: rotate(90deg);
    animation-timing-function: ease-out;
  }

  55% {
    transform: rotate(360deg);
    animation-timing-function: ease-in;
  }

  100% {
    transform: rotate(360deg);
    animation-timing-function: ease-in;
  }
}

@keyframes circ-anim3 {
  40% {
    transform: rotate(0deg);
    animation-timing-function: ease-in;
  }

  50% {
    transform: rotate(90deg);
    animation-timing-function: ease-out;
  }

  70% {
    transform: rotate(360deg);
    animation-timing-function: ease-in;
  }

  100% {
    transform: rotate(360deg);
    animation-timing-function: ease-in;
  }
}

@keyframes circ-anim4 {
  55% {
    transform: rotate(0deg);
    animation-timing-function: ease-in;
  }

  65% {
    transform: rotate(90deg);
    animation-timing-function: ease-out;
  }

  85% {
    transform: rotate(360deg);
    animation-timing-function: ease-in;
  }

  100% {
    transform: rotate(360deg);
    animation-timing-function: ease-in;
  }
}

@keyframes circ-anim5 {
  70% {
    transform: rotate(0deg);
    animation-timing-function: ease-in;
  }

  80% {
    transform: rotate(90deg);
    animation-timing-function: ease-out;
  }

  100% {
    transform: rotate(360deg);
    animation-timing-function: ease-in;
  }
}

.circles-content {
  width: 100vw;
  height: 100vh;
  transition: all 0.8s ease-in;
  overflow: hidden;
  opacity: 0;
  &.loaded {
    opacity: 1;
  }
}

.circles-container {
  z-index: 1000;
  width: 100vw;
  height: 100%;
  position: absolute;
  display: flex;
  @media (max-width: $md) {
    top: -15vh;
  }
  @media (max-width: $sm) {
    height: 100vh;
  }
  justify-content: center;
  align-items: center;

  .shapeee {
    z-index: 1000;
    position: absolute;
    border: 0.1rem solid rgba(255, 255, 255, 0.5);
    background: $circles-gradient;
    border-radius: 50%;
    margin: 3rem;
    opacity: 0.3;
    $base-width: 105vw; // Base width for the smallest circle
    $base-height: 100vw; // Base height for the smallest circle

    @for $i from 1 through 15 {
      &:nth-child(#{$i}) {
        $circleSize: $base-width - ((15 - $i) * ($base-width / 15)); 
        width: $circleSize;
        height: $circleSize;
        box-shadow: $circ-shadow-1;

        @if $i ==1 {
          animation: circ-anim 24s normal infinite;
        }

        @if $i ==4 {
          animation: circ-anim4 24s normal infinite;
        }

        @if $i ==7 {
          animation: circ-anim3 24s normal infinite;
        }

        @if $i ==10 {
          animation: circ-anim2 24s normal infinite;
        }

        @if $i ==13 {
          animation: circ-anim5 24s normal infinite;
        }
        @media (max-width: $md) {
          width: calc(#{$circleSize * 1.5});
          height: calc(#{$circleSize * 1.5});
          border: 0.1rem solid rgba(255, 255, 255, 0.5);
          &:not(:nth-child(10)):not(:nth-child(13)) {
            animation: none; /* Cancels animation on small screens for all except i 10 and i 13 */
          }
        }
      }
    }

    @if $reduce-motion {
      animation: none;
    }
  }
}

.gradient-container {
  height: 100%;
  width: 110vw;
  display: flex;
  flex-direction: column;
  background-color: $neutral-100;
  z-index: 1;
  position: absolute;

  .color-row {
    display: flex;
    height: 30vh;
    align-items: flex-end;
    filter: blur(4vw);
    width: 100vw;
    .coldiv {
      flex: 1;
      height: 50vh;
      margin: -2vh;
      position: relative;
      border-radius: 50%;
      &:nth-child(1) {
        background-color: $gcolor_1;
        z-index: 1;
        flex-grow: 1;
      }
      &:nth-child(2) {
        background-color: $gcolor_2;
        z-index: 3;
        flex-grow: 2;
      }
      &:nth-child(3) {
        background-color: $gcolor_4;
        z-index: 2;
        flex-grow: 1;
      }
      &:nth-child(4) {
        background-color: $gcolor_5;
        z-index: 3;
        flex-grow: 2;
      }
      &:nth-child(5) {
        background-color: $gcolor_6;
        z-index: 1;
        flex-grow: 1;
      }
    }
  }

  .color-row2 {
    display: flex;
    margin-top: -30vh;
    height: 80vh;
    z-index: 1000;
    overflow: visible;
    width: 100vw;
    filter: blur(6vw);
    opacity: 0.9;
    .majordiv {
      margin: 0vh -40vh;
      height: 80vh;
      background: $gcolor-major;
      border-radius: 50% 50% 100% 0% / 100% 100% 0% 0%;
      &:nth-child(1),
      &:nth-child(3) {
        flex: 1;
      }
      &:nth-child(2) {
        flex: 2;
      }
    }
    @media (max-width: $md) {
        margin-top: -32vh;
        .majordiv {
          margin: 0vh -30vh;
        }
      }
    }
}

.cat-container {
  position: relative;
  display: flex;
  cursor: pointer;

  img.tooltip-trigger:hover+.tooltip {
    visibility: visible;
    opacity: 1;
    transform: translateY(-100%);
  }
  .tooltip {
    visibility: hidden;
    background-color: $blue-10;
    color: $blue-80;
    text-align: center;
    border-radius: .6rem;
    padding: .5rem;
    position: absolute;
    z-index: 1;
    top: 0;
    opacity: 0;
    transition: opacity 0.3s, transform 0.3s;
  }
}